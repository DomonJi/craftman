#!/bin/sh
set -e
PLUGIN_NAME="composer"

composer__usage()
{
  echo " $SELF composer:lock         Regenerate composer.lock for your composer.json file"
	echo " $SELF composer:prepare      Generate required files to deploy to Heroku"
}

composer__interpolate()
{
  COMPOSER__JSON="$DIR/composer.json"
  COMPOSER__INSTALL="install.composer"
  COMPOSER__INSTALL_PATH="$SCRIPTS_PATH/$COMPOSER__INSTALL"
}

composer__configure()
{
  cd "$SCRIPTS_PATH"
  add_gitignore "composer.phar"
  if [ -f "$COMPOSER__INSTALL_PATH" ] && [ "$FORCE_OVERWRITE" = "0" ]; then
    cm_log "+ Using existent $(basename "$COMPOSER__INSTALL_PATH")"
  else
    cm_log "+ Creating $(basename "$COMPOSER__INSTALL_PATH") file"
    cat > "$COMPOSER__INSTALL_PATH" <<- EOF
#!/bin/sh
set -e
echo "===> Installing PHP Composer"
cd /scripts
curl -sS https://getcomposer.org/installer | php
EOF
  fi
}

composer__configuration_run()
{
  run_script_once "$COMPOSER__INSTALL"
}

composer__prepare()
{
  cm_log "Preparing composer.json"
  __composer__create_json
}

composer__lock()
{
  [ -f "$DIR/composer.json" ] || abort "composer.json is required"
  cm_log "Generating composer.lock"
  mkdir -p "$SCRIPTS_PATH/composer"
  cat > "$SCRIPTS_PATH/composer/.gitignore" <<- EOF
*
!.gitignore
EOF
  docker cp "$DIR/composer.json" "$(craft_container):/scripts/composer"
  craft_exec "cd /scripts/composer && /scripts/composer.phar install && /scripts/composer.phar update"
  if [ -f "$DIR/composer.lock" ]; then
    mv -f "$DIR/composer.lock" "$DIR/composer.lock.bak"
  fi
  cp "$SCRIPTS_PATH/composer/composer.lock" "$DIR/composer.lock"
  rm -f "$DIR/composer.lock.bak"
}

__composer__create_json()
{
  if [ -f "$COMPOSER__JSON" ] && [ "$FORCE_OVERWRITE" = "0" ]; then
    cm_log "+ Using existent $(basename "$COMPOSER__JSON")"
  else
    cm_log "+ Creating $(basename "$COMPOSER__JSON") file"
    cat > "$COMPOSER__JSON" <<- EOF
{
  "require": {
    "ext-mbstring": "*",
    "ext-imagick": "*",
    "php": "^5.6"
  }
}
EOF
  fi
}

